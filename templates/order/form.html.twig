{% extends 'base.html.twig' %}

{% block title %}Passer une commande{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1 class="text-center mb-4">Passer une commande</h1>

        <form action="{{ path('order_create') }}" method="POST" class="w-75 mx-auto">
            <div class="mb-3">
                <label for="email" class="form-label">Email :</label>
                <input type="email" name="email" id="email" class="form-control" required>
            </div>

            <div class="mb-3">
                <label for="event_id" class="form-label">Événement :</label>
                <select name="event_id" id="event-select" class="form-select" required>
                    {% for event in events %}
                        <option value="{{ event.id }}">{{ event.nom }}</option>
                    {% endfor %}
                </select>
            </div>

            <div class="mb-3">
                <label for="date" class="form-label">Date (si billet jour) :</label>
                <select name="date" id="date-select" class="form-select">
                    <option value="" disabled selected>Choisir une date</option>
                </select>
            </div>

            <!-- Affichage du prix de la date sélectionnée -->
            <div id="price-display" class="mb-3">
                <p>Prix : <span id="price-value" class="badge bg-primary">0</span> €</p>
            </div>

            <hr>
            <h3 class="mb-3">Tickets</h3>

            <div id="ticket-container">
                <div class="ticket row mb-3">
                    <div class="col-md-4">
                        <label class="form-label">Nom :</label>
                        <input type="text" name="ticket_names[]" class="form-control" required>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Prénom :</label>
                        <input type="text" name="ticket_firstnames[]" class="form-control" required>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Type :</label>
                        <select name="ticket_types[]" class="form-select" required>
                            <option value="jour">Jour</option>
                            <option value="multipass">Multipass</option>
                        </select>
                    </div>
                </div>
            </div>

            <button type="button" onclick="addTicket()" class="btn btn-outline-primary mb-3">+ Ajouter un ticket</button>
            <br>
            <button type="submit" class="btn btn-primary w-100">Valider la commande</button>
        </form>
    </div>

    <hr class="my-5">

<div class="container w-75 mx-auto">
    <h2 class="mb-3">Nombre de tickets par événement</h2>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Événement</th>
                <th>Nombre de tickets</th>
            </tr>
        </thead>
        <tbody>
            {% for data in event_ticket_counts %}
                <tr>
                    <td>{{ data.event_nom }}</td>
                    <td>{{ data.ticket_count }}</td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="2" class="text-center">Aucun ticket enregistré pour le moment.</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

    <script>
        // Définition de la fonction addTicket
        function addTicket() {
            const container = document.getElementById('ticket-container');
            const template = container.firstElementChild.cloneNode(true);
            // Réinitialiser les champs clonés
            const inputs = template.querySelectorAll('input');
            inputs.forEach(input => input.value = '');
            container.appendChild(template);
        }

        // Récupérer les dates disponibles pour chaque événement en utilisant la variable Twig passée par le contrôleur
        const eventDates = {{ event_dates|json_encode|raw }};

        // Fonction pour mettre à jour les dates et les prix lors du changement de sélection d'événement
        document.getElementById('event-select').addEventListener('change', function () {
            const eventId = this.value;
            const dateSelect = document.getElementById('date-select');
            const priceDisplay = document.getElementById('price-value');

            // Vider les options existantes dans le select date
            dateSelect.innerHTML = '<option value="" disabled selected>Choisir une date</option>';

            // Ajouter les options des dates et prix pour l'événement sélectionné
            if (eventDates[eventId]) {
                eventDates[eventId].forEach(dateData => {
                    const option = document.createElement('option');
                    option.value = dateData.date;
                    option.textContent = `${dateData.date} - ${dateData.price} €`;
                    dateSelect.appendChild(option);
                });

                // Afficher le prix de la première date disponible
                if (eventDates[eventId].length > 0) {
                    priceDisplay.textContent = eventDates[eventId][0].price;
                }
            } else {
                priceDisplay.textContent = '0'; // Aucun prix si pas de date
            }
        });

        // Mettre à jour le prix affiché lorsque la date est sélectionnée
        document.getElementById('date-select').addEventListener('change', function () {
            const eventId = document.getElementById('event-select').value;
            const selectedDate = this.value;
            const priceDisplay = document.getElementById('price-value');

            // Trouver le prix de la date sélectionnée
            const selectedDateData = eventDates[eventId].find(dateData => dateData.date === selectedDate);
            if (selectedDateData) {
                priceDisplay.textContent = selectedDateData.price;
            }
        });

        // Initialiser l'affichage avec les prix du premier événement sélectionné
        document.getElementById('event-select').dispatchEvent(new Event('change'));
    </script>
{% endblock %}